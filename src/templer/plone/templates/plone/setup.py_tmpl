# -*- coding: utf-8 -*-
from setuptools import find_packages
from setuptools import setup

import os


def read(*rnames):
    return open(os.path.join(os.path.dirname(__file__), *rnames)).read()

long_description = \
    read('README.rst') + \
    read('docs', 'CHANGELOG.rst') + \
    read('docs', 'CONTRIBUTORS.rst') + \
    read('docs', 'LICENSE.rst')

setup(name=${repr($project)},
      version=version,
      description="${description or None}",
      long_description=long_description,
      # Get more strings from
      # http://pypi.python.org/pypi?%3Aaction=list_classifiers
      classifiers=[
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Libraries :: Python Modules",
      ],
      keywords=${repr($keywords) or $empty},
      author=${repr($author) or $empty},
      author_email=${repr($author_email) or $empty},
      url=${repr($url) or $empty},
      license=${repr($license_name) or $empty},
      packages=find_packages('src'),
      package_dir={'': 'src'},
      namespace_packages=[${repr($namespace_package)}, ],
      include_package_data=True,
      zip_safe=${repr(bool($zip_safe)) or False},
      install_requires=[
          'Pillow',
          'Plone',
          'setuptools',
          # -*- Extra requirements: -*-
      ],
      extras_require={
        'test': [
            'mock',
            'plone.app.testing',
            # if $add_robot_tests
            'plone.app.testing[robot]>=4.2.2'
            # else
            'plone.app.testing'
            # end if
            'unittest2',
        ],
        'develop': [
            'flake8',
            'jarn.mkrelease',
            'niteoweb.loginas',
            'plone.app.debugtoolbar',
            'plone.reload',
            'Products.Clouseau',
            'Products.DocFinderTab',
            'Products.PDBDebugMode',
            'Products.PrintingMailHost',
            'Sphinx',
            'zest.releaser',
            'zptlint',
        ],
    },
      entry_points="""
      # -*- Entry points: -*-
      [z3c.autoinclude.plugin]
      target = plone
      """,
      # if $use_localcommands
      setup_requires=["PasteScript"],
      paster_plugins=["templer.localcommands"],
      # end if
      )
